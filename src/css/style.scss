@import url('https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;1,100;1,300;1,400;1,500&display=swap');

$manrope: 'Manrope', sans-serif;
$roboto: 'Roboto', sans-serif;

$gray: 25;
$dark_gray: $gray - 0.2 * $gray;
$light_gray: $gray + 0.9 * $gray;

body {
  // Dark gray background
  background-color: rgb($dark_gray, $dark_gray, $dark_gray);

  // Text colour
  color: rgb(200, 200, 200); // A not so bright white

  // Default font family
  font-family: $roboto;
}

$content-padding: 2em;

#content {
  width: 50vh;
  height: 50vh;

  // Center vertically and horizontally
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  // A ligter gray shade for the background
  background-color: rgb($gray, $gray, $gray);

  // Make borders a little bit less sharp
  border-radius: 10px;

  h1 {
    margin-top: 0;
    text-align: center;
    font-family: $manrope;
  }

  padding: $content-padding;
}

%header_and_footer {
  position: fixed;
  font-family: $manrope;

  a {
    text-decoration: none;
  }
}
header {
  @extend %header_and_footer;

  top: 1%;
}
footer {
  @extend %header_and_footer;

  bottom: 1%;
  text-align: center;
  width: 100%;
}

::selection {
  background-color: rgb($light_gray, $light_gray, $light_gray);
}

a {
  color: rgb(200, 200, 200); // A not so bright white
}

.icon {
  width: 3em;
  height: 3em;

  // By default the icons are white
  fill: #c8c8c8;

  // On hover icons get their brand colours
  &.github:hover {
    fill: rgb(79, 140, 201); // GitHub turns a purple-blue
  }
  &.instagram {
    &:hover {
      // On hover, the Instagram icon goes rainbow-coloured by a really 
      // convoluted process, but I have not found any other way to make
      // it work like I want it to.

      // DOWNSIDE:
      // This process also generates a request to get '../assets/sprite.svg',
      // even though the browser had already requested that to display the
      // default icons (via '<svg> <use href>').

      // This process works as follows:

      // I have to set the fill of the '<svg>' object as transparent
      // to effectively remove the default Instagram icon from the user's view.
      fill: transparent;

      // Now I set the background of the icon to the classic Instagram gradient.
      background-image: url(../assets/ig-gradient.png);
      // And make it fill the whole icon (3em x 3em)
      background-size: 3em 3em;

      // And then, the browser uses the mask image I configure below
      // to only display the pars of the gradient that line up with
      // the mask.
    }

    // I set a mask-image. That makes it so the browser only displays
    // the parts of the gradient that line up with the mask.
    // The mask is the Instagram icon (which is the icon you will see if you
    // open the 'sprite.svg' file).

    // I have a variable to avoid writing the value twice.
    $mask-image: url(../assets/sprite.svg);
    -webkit-mask-image: $mask-image; // Safari, Chrome, Edge, Opera...
    mask-image: $mask-image; // Firefox
  }
  &.twitter:hover {
    fill: rgb(29, 161, 242); // Twitter turns blue
  }
}

.icon-list {
  width: inherit;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: stretch;

  position: absolute;
  margin-left: -$content-padding;
  padding: inherit;
  bottom: 1%;
}
